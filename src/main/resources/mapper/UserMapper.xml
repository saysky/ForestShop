<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.ssm.shop.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.ssm.shop.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="display_name" property="displayName"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="create_time" property="createTime"/>
        <result column="status" property="status"/>
        <result column="type" property="type"/>
    </resultMap>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            id, username, password, display_name, email, phone, address, create_time, status, type
        FROM
            `user` 
        WHERE
            id = #{id}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
       DELETE 
       FROM
         `user` 
       WHERE
         id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.ssm.shop.entity.User" useGeneratedKeys="true" keyProperty="id">
       INSERT INTO `user`
        ( username, password, display_name, email, phone, address, create_time, status , type)
        VALUES
	    ( #{username}, #{password}, #{displayName}, #{email}, #{phone}, #{address}, #{createTime}, #{status}, #{type})
    </insert>

    <update id="update" parameterType="com.example.ssm.shop.entity.User">
        update
        `user`
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="displayName != null and displayName != ''">display_name = #{displayName},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        where id = #{id}
    </update>

    <select id="findAll" parameterType="com.example.ssm.shop.entity.User" resultMap="BaseResultMap">
        SELECT
        id, username, password, display_name, email, phone, address, create_time, status, type
        FROM
        `user`
        <where>
            <if test="status != null">
                status = #{status} AND
            </if>
            <if test="type != null">
                type = #{type} AND
            </if>
            1 = 1
        </where>
        ORDER BY id DESC
    </select>

    <select id="findByUsernameOrEmail" parameterType="String" resultMap="BaseResultMap">
        SELECT
            id, username, password, display_name, email, phone, address, create_time, status, type
        FROM
            `user`
        WHERE
            username = #{value} OR email = #{value}
    </select>

    <select id="findByUsername" parameterType="String" resultMap="BaseResultMap">
        SELECT
            id, username, password, display_name, email, phone, address, create_time, status, type
        FROM
            `user`
        WHERE
            username = #{value}
    </select>

    <select id="findByEmail" parameterType="String" resultMap="BaseResultMap">
         SELECT
            id, username, password, display_name, email, phone, address,  create_time, status, type
         FROM
            `user`
         WHERE
            email = #{value}
    </select>


